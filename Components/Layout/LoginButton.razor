@rendermode InteractiveServer

@if (token != null)
{
    <MudButton Style="color:white" @onclick="ForceLogout" Variant="Variant.Text">Log out</MudButton>
}
else
{
    <MudButton Style="color:white" @onclick="Login" Variant="Variant.Text">Login</MudButton>
}


@code {
    private string token;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) token = await Loc.GetItemAsStringAsync("token"); 
        StateHasChanged();
    }

    private Task Login()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return Dialog.ShowAsync<Login>("Login", options);
    }
    private void Logout()
    {
        Loc.RemoveItemAsync("token");
        Nav.NavigateTo("/");
    }

    private async Task ForceLogout()
    {
        Logout();
        await JS.InvokeVoidAsync("forceReload1");
    }

    [Inject] IJSRuntime JS { get; set; }
}