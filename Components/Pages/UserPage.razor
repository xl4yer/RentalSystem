@page "/users"
@rendermode InteractiveServer

<PageTitle>Users</PageTitle>

<MudLayout>
    <MudAppBar Elevation="1" Style="background-color:#4E3434">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <LoginButton />
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Breakpoint="@_breakpoint" Elevation="1" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudAvatar style="width:120px; height:120px">
                <MudImage Src="logo1.png"></MudImage>
            </MudAvatar>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavLink Href="gowns" Icon="@Icons.Material.Filled.Checkroom">Gowns</MudNavLink>
            <MudNavLink Href="reservations" Icon="@Icons.Material.Filled.CalendarToday">Reservations</MudNavLink>
            <MudNavLink Href="rentals" Icon="@Icons.Material.Filled.ShoppingCart">Rentals</MudNavLink>
            <MudNavLink Href="users" Icon="@Icons.Material.Filled.VerifiedUser">Users</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            <div class="container mt-3">
                @if (user == null)
                {
                    <div class="d-flex justify-content-center my-4">
                        <div class="loader"></div>
                    </div>
                }
                else if (user.Length == 0)
                {
                    <div class="text-center my-4 d-flex justify-content-center">
                        <h1>No records found</h1>
                    </div>
                }
                else
                {
                    <MudTable Dense Hover Items="@user" Elevation="1" Style="border-radius:20px"
                              HorizontalScrollbar FixedHeader FixedFooter Height="600px">
                        <ToolBarContent>
                            <MudButton Style="background-color:#4E3434; color:white" Variant="Variant.Outlined" @onclick="LoadUsers">Refresh</MudButton>
                        </ToolBarContent>

                        <HeaderContent>
                            @foreach (var header in new[] { "Name", "Address", "Contact", "Email" })
                            {
                                <MudTh>@header</MudTh>
                            }
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Name">@($"{context.Fname} {context.Mname} {context.Lname} {context.Ext}")</MudTd>
                            <MudTd DataLabel="Gown Name">@context.Address</MudTd>
                            <MudTd DataLabel="Due Date">@context.Contact</MudTd>
                            <MudTd DataLabel="Due Date">@context.Email</MudTd>
                        </RowTemplate>
                    </MudTable>
                }
            </div>
        </MudContainer>
    </MudMainContent>
</MudLayout>



@code {
    private bool _open = true;
    private Breakpoint _breakpoint = Breakpoint.Lg;
    private Users[]? user;

    private void ToggleDrawer()
    {
        _open = !_open;
    }
  
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await LoadUsers();
    }
    private async Task LoadUsers()
    {
        try
        {
            using var client = new HttpClient { BaseAddress = new Uri(Nav.BaseUri) };
            var response = await client.GetAsync("api/User/Users");
            if (!response.IsSuccessStatusCode) return;

            await Task.Delay(1000);
            user = JsonConvert.DeserializeObject<Users[]>(await response.Content.ReadAsStringAsync());
            StateHasChanged();
        }
        catch (Exception ex)
        {
            SnackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }

   
}
