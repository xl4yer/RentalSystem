@page "/dashboard"

<MudLayout>
    <MudAppBar Elevation="1" Style="background-color:#4E3434">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <LoginButton />
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Breakpoint="@_breakpoint" Elevation="1" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">V.O.W</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="dashboard">Dashboard</MudNavLink>
            <MudNavLink Href="gowns">Gowns</MudNavLink>
            <MudNavLink Href="reservations">Reservations</MudNavLink>
            <MudNavLink Href="rentals">Rentals</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
         
                    <MudGrid Class="mb-3">
                        <MudItem xs="6" sm="6" md="6">
                            <MudPaper Class="pa-4 rounded-lg" Elevation="3">
                                <MudGrid>
                                    <MudItem>
                                <MudIcon Color="Color.Success" Style="font-size:3rem;" Icon="@Icons.Material.Outlined.EventAvailable" />
                                    </MudItem>
                                    <MudItem>
                                        <MudText Typo="Typo.h4"><b>@availableGowns</b></MudText>
                                        <MudText Typo="Typo.subtitle1">Available Gowns</MudText>
                                    </MudItem>
                                </MudGrid>
                            </MudPaper>
                        </MudItem>

                        <MudItem xs="6" sm="6" md="6">
                            <MudPaper Class="pa-4 rounded-lg" Elevation="3">
                                <MudGrid>
                                    <MudItem>
                                        <MudIcon Color="Color.Warning" Style="font-size:3rem;" Icon="@Icons.Material.Outlined.Pending" />
                                    </MudItem>
                                    <MudItem>
                                        <MudText Typo="Typo.h4"><b></b>@pendingGowns</MudText>
                                        <MudText Typo="Typo.subtitle1">Pending Gowns</MudText>
                                    </MudItem>
                                </MudGrid>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>

                    <br />
            <MudGrid Class="mb-3">
                <MudItem xs="6" sm="6" md="6">
                    <MudPaper Class="pa-4 rounded-lg" Elevation="3">
                        <MudGrid>
                            <MudItem>
                                <MudIcon Color="Color.Primary" Style="font-size:3rem;" Icon="@Icons.Material.Outlined.Approval" />
                            </MudItem>
                            <MudItem>
                                <MudText Typo="Typo.h4"><b>@rentedGowns</b></MudText>
                                <MudText Typo="Typo.subtitle1">Rented Gowns</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>

                <MudItem xs="6" sm="6" md="6">
                    <MudPaper Class="pa-4 rounded-lg" Elevation="3">
                        <MudGrid>
                            <MudItem>
                                <MudIcon Color="Color.Tertiary" Style="font-size:3rem;" Icon="@Icons.Material.Outlined.AssignmentReturn" />
                            </MudItem>
                            <MudItem>
                                <MudText Typo="Typo.h4"><b></b>@returnedGowns</MudText>
                                <MudText Typo="Typo.subtitle1">Returned Gowns</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
            </MudGrid>


               
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code{
    private bool _open = true;
    private Breakpoint _breakpoint = Breakpoint.Lg;
    private int availableGowns;
    private int pendingGowns;
    private int rentedGowns;
    private int returnedGowns;

    private void ToggleDrawer()
    {
        _open = !_open;
    }
    protected override async Task OnInitializedAsync()
    {
        await CountAvailableGowns();
        await CountPendingGowns();
        await CountRentedGowns();
        await CountReturnedGowns();
    }

    private async Task CountGowns(string endpoint, Action<int> setter)
    {
        using var client = new HttpClient { BaseAddress = new Uri(Nav.BaseUri) };
        var response = await client.GetAsync($"api/Gown/{endpoint}");
        if (response.IsSuccessStatusCode)
        {
            var count = JsonConvert.DeserializeObject<int>(await response.Content.ReadAsStringAsync());
            setter(count);
            StateHasChanged();
        }
    }

    public Task CountAvailableGowns() => CountGowns("CountAvailableGowns", val => availableGowns = val);
    public Task CountPendingGowns() => CountGowns("CountPendingGowns", val => pendingGowns = val);
    public Task CountRentedGowns() => CountGowns("CountRentedGowns", val => rentedGowns = val);
    public Task CountReturnedGowns() => CountGowns("CountReturnedGowns", val => returnedGowns = val);



}