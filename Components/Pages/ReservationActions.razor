<style>
    .custom-dialog-title {
        background-color: #4E3434;
        color: white;
        text-align: center;
    }
</style>

<MudDialog TitleClass="custom-dialog-title" DisableSidePadding="true">
    <TitleContent>
        <MudText Typo="Typo.h6" Style="color:white">Reservation Details</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 650px; padding: 20px;">

            <center>
                <MudImage Style="height:200px; width:150px; border-radius:5px;" Src="@( $"data:image/bmp;base64,{Convert.ToBase64String(_reservation.Photo)}" )"
                          Class="reservation-image" />
            </center>

            <br />
            <MudText Typo="Typo.body1" Align="Align.Center">Customer Name: <u>@_reservation.Fullname</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Gown Name: <u>@_reservation.Name</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Gown Type: <u>@_reservation.Type</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Color: <u>@_reservation.Color</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Size: <u>@_reservation.Size</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Pickup Date: <u>@_reservation.PickupDate?.ToString("d")</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Payment Method: <u>@_reservation.PaymentMethod</u></MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">Reservation Fee: <u>@_reservation.ReservationFee</u></MudText>

            <br />
            @if (_reservation.PaymentMethod != "Cash")
            {
                <center>
                    <a href="@( $"data:image/bmp;base64,{Convert.ToBase64String(_reservation.Receipt)}" )" download="receipt.bmp">
                        <u>Download Receipt</u>
                    </a>
                </center>
            }
            else
            {
                <center>
                    <p>No Available Image</p>
                </center>
            }





        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" FullWidth Color="Color.Warning" @onclick="Declined">Declined</MudButton>
        <MudButton Variant="Variant.Filled" FullWidth Style="background-color: #4E3434; color:white" @onclick="Approved">Approved</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Reservation _reservation { get; set; } = new Reservation();
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    private bool ShowReceipt = false;


    private async Task Approved()
    {
        try
        {
            var reservation = new Reservation
                {
                    Id = _reservation.Id,
                    Status = "Approved"
                };
            var response = await new HttpClient { BaseAddress = new Uri(Nav.BaseUri) }
                .PutAsJsonAsync("api/Reservation/ApproveReservation", reservation);
            var result = await response.Content.ReadFromJsonAsync<int?>() ?? 0;
            var isSuccess = response.IsSuccessStatusCode && result > 0;
            SnackBar.Add(
                isSuccess ? "Done: Reservation Approved!" : $"Warning: {response.ReasonPhrase}",
                isSuccess ? Severity.Success : Severity.Warning
            );
            MudDialog.Close();
        }
        catch (Exception ex)
        {
            SnackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }

    private async Task Declined()
    {
        try
        {
            var reservation = new Reservation
                {
                    Id = _reservation.Id,
                    Status = "Declined"
                };
            var response = await new HttpClient { BaseAddress = new Uri(Nav.BaseUri) }
                .PutAsJsonAsync("api/Reservation/ApproveReservation", reservation);
            var result = await response.Content.ReadFromJsonAsync<int?>() ?? 0;
            var isSuccess = response.IsSuccessStatusCode && result > 0;
            SnackBar.Add(
                isSuccess ? "Done: Reservation Declined!" : $"Warning: {response.ReasonPhrase}",
                isSuccess ? Severity.Success : Severity.Warning
            );
            MudDialog.Close();
        }
        catch (Exception ex)
        {
            SnackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}