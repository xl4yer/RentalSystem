<style>
    .custom-dialog-title {
        background-color: #4E3434;
        color: white;
        text-align: center;
    }

    .image-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 10px;
    }

    .details-container {
        text-align: center;
        padding: 10px;
    }

    .reservation-image {
        width: 120px; /* Increased size for better visibility */
        height: auto;
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }
</style>

<MudDialog TitleClass="custom-dialog-title" DisableSidePadding="true">
    <TitleContent>
        <MudText Typo="Typo.h6" Style="color:white">Reservation Details</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 650px; padding: 20px;">

            <!-- Centered Image -->
            <div class="image-container">
                <MudImage Src="@( $"data:image/bmp;base64,{Convert.ToBase64String(_reservation.Photo)}" )"
                          Class="reservation-image" />
            </div>

            <!-- Centered Details -->
            <div class="details-container">
                <MudText Typo="Typo.subtitle1">Customer Name: @_reservation.Fullname</MudText>
                <MudText Typo="Typo.subtitle1">Gown Name: @_reservation.Name</MudText>
                <MudText Typo="Typo.subtitle1">Color: @_reservation.Color</MudText>
                <MudText Typo="Typo.subtitle1">Size: @_reservation.Size</MudText>
                <MudText Typo="Typo.subtitle1">Pickup Date: @_reservation.PickupDate?.ToString("d")</MudText>
                <MudText Typo="Typo.subtitle1">Payment Method: @_reservation.PaymentMethod</MudText>

                @if (_reservation.PaymentMethod != "Cash")
                {
                    <MudText Typo="Typo.subtitle1">Receipt</MudText>
                    <MudImage Src="@( $"data:image/bmp;base64,{Convert.ToBase64String(_reservation.Receipt)}" )"
                              Class="reservation-image" />
                }
            </div>

        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" FullWidth Color="Color.Tertiary" @onclick="Approved">Approved</MudButton>
        <MudButton Variant="Variant.Filled" FullWidth Color="Color.Secondary" @onclick="Declined">Declined</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Reservation _reservation { get; set; } = new Reservation();
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }

    private async Task Approved()
    {
        try
        {
            var reservation = new Reservation
                {
                    Id = _reservation.Id,
                    Status = "Approved"
                };
            var response = await new HttpClient { BaseAddress = new Uri(Nav.BaseUri) }
                .PutAsJsonAsync("api/Reservation/ApproveReservation", reservation);
            var result = await response.Content.ReadFromJsonAsync<int?>() ?? 0;
            var isSuccess = response.IsSuccessStatusCode && result > 0;
            SnackBar.Add(
                isSuccess ? "Done: Reservation Approved!" : $"Warning: {response.ReasonPhrase}",
                isSuccess ? Severity.Success : Severity.Warning
            );
            MudDialog.Close();
        }
        catch (Exception ex)
        {
            SnackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }

    private async Task Declined()
    {
        try
        {
            var reservation = new Reservation
                {
                    Id = _reservation.Id,
                    Status = "Declined"
                };
            var response = await new HttpClient { BaseAddress = new Uri(Nav.BaseUri) }
                .PutAsJsonAsync("api/Reservation/ApproveReservation", reservation);
            var result = await response.Content.ReadFromJsonAsync<int?>() ?? 0;
            var isSuccess = response.IsSuccessStatusCode && result > 0;
            SnackBar.Add(
                isSuccess ? "Done: Reservation Declined!" : $"Warning: {response.ReasonPhrase}",
                isSuccess ? Severity.Success : Severity.Warning
            );
            MudDialog.Close();
        }
        catch (Exception ex)
        {
            SnackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}